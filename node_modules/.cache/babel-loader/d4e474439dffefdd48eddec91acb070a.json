{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanvu/github/projectBurn/coding-challenges/blue-owl/ui/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './styles/App.scss';\nimport axios from 'axios';\nimport { parseQuoteStr, readStr } from './utilties/strUtilities';\n\nfunction App() {\n  const [ipAddress, setIPAddress] = useState();\n  const [lat, setLat] = useState();\n  const [lon, setLong] = useState();\n  const [quote, setQuote] = useState({\n    content: null,\n    author: null\n  });\n  const [currentQuoteId, setCurrentQuoteId] = useState();\n  const [pastQuotes, setPastQuotes] = useState({});\n  const [pastQuoteOrder, setPastQuoteOrder] = useState([]);\n  const [singleQuoteMode, setQuoteMode] = useState(true);\n  const [quoteRatings, setQuoteRatings] = useState({});\n  useEffect(() => {\n    fetchIPAddress();\n    fetchQuote();\n  }, []);\n\n  const fetchIPAddress = async () => {\n    let response = await axios.get('http://ip-api.com/json');\n    const {\n      query: ipAddress,\n      lat,\n      lon\n    } = response.data;\n    setIPAddress(ipAddress);\n    setLat(lat);\n    setLong(lon);\n    console.log(\"IP Data\", response.data);\n  };\n\n  const fetchQuote = async () => {\n    let response = await axios.get('https://quotesondesign.com/wp-json/wp/v2/posts/?orderby=rand&per_page=10');\n\n    if (response.status === 200) {\n      let quotes = response.data;\n\n      for (let i = 0; i < quotes.length; i++) {\n        let quote = quotes[i];\n\n        if (!pastQuotes[quote.id]) {\n          let content = parseQuoteStr(quote.content.rendered);\n          let quoteObject = {\n            content,\n            author: quote.title.rendered\n          };\n          setQuote(quoteObject);\n          pastQuotes[quote.id] = quoteObject;\n          setCurrentQuoteId(quote.id);\n          setPastQuotes(pastQuotes);\n          setPastQuoteOrder(pastQuoteOrder.concat(quote.id));\n          return;\n        }\n      }\n    }\n  };\n\n  const readQuote = () => {\n    readStr(quote.content);\n  };\n\n  const showPastQuotesOrSingleQuote = () => {\n    setQuoteMode(!singleQuoteMode);\n  };\n\n  const rateQuote = rating => {\n    fetchQuote();\n    quoteRatings[currentQuoteId] = rating;\n    setQuoteRatings(quoteRatings);\n  };\n\n  const robotImageURL = `https://robohash.org/${ipAddress}.png?bgset=bg2`;\n  const mapImage = `https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/pin-s(${lon},${lat})/${lon},${lat},9.67,0.00,0.00/500x500@2x?access_token=pk.eyJ1IjoicmVhbHNlYW4iLCJhIjoiY2s3bnB3YjhjMDE4YjNncGdhaDFraHR2ZiJ9.HbrfAF0MChL2E_T7ZROD9A`;\n  console.log(quoteRatings);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Quote Bot\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-left user-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, ipAddress && /*#__PURE__*/React.createElement(\"picture\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: robotImageURL,\n    className: \"robot\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), lat && lon && /*#__PURE__*/React.createElement(\"picture\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mapImage,\n    className: \"robot\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-right quote-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, singleQuoteMode && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: readQuote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"Read this quote\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: showPastQuotesOrSingleQuote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, singleQuoteMode ? 'Show past quotes' : 'Show single quote')), singleQuoteMode ? currentQuoteId && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-quote-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(QuoteBox, {\n    quote: pastQuotes[currentQuoteId].content,\n    author: pastQuotes[currentQuoteId].author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-quote-container-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-danger\",\n    onClick: () => {\n      rateQuote('bad');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Lame\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-warning\",\n    onClick: () => {\n      rateQuote('ok');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Meh\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-success\",\n    onClick: () => {\n      rateQuote('good');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"Great\"))) : pastQuoteOrder.map(id => {\n    const quote = pastQuotes[id];\n    const rating = quoteRatings[id];\n    return /*#__PURE__*/React.createElement(QuoteBox, {\n      key: id,\n      quote: quote.content,\n      author: quote.author,\n      rating: rating,\n      onClick: () => {\n        setCurrentQuoteId(id);\n        showPastQuotesOrSingleQuote();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    });\n  }))))));\n}\n\nconst QuoteBox = ({\n  quote,\n  author,\n  rating\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: rating ? 'quote-box ' + rating : 'quote-box',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"context\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }\n}, quote), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"author\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }\n}, author));\n\nexport default App;","map":{"version":3,"sources":["/Users/jonathanvu/github/projectBurn/coding-challenges/blue-owl/ui/src/App.js"],"names":["React","useState","useEffect","axios","parseQuoteStr","readStr","App","ipAddress","setIPAddress","lat","setLat","lon","setLong","quote","setQuote","content","author","currentQuoteId","setCurrentQuoteId","pastQuotes","setPastQuotes","pastQuoteOrder","setPastQuoteOrder","singleQuoteMode","setQuoteMode","quoteRatings","setQuoteRatings","fetchIPAddress","fetchQuote","response","get","query","data","console","log","status","quotes","i","length","id","rendered","quoteObject","title","concat","readQuote","showPastQuotesOrSingleQuote","rateQuote","rating","robotImageURL","mapImage","map","QuoteBox"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,yBAAvC;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,EAA9B;AACA,QAAM,CAACU,GAAD,EAAMC,OAAN,IAAiBX,QAAQ,EAA/B;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC;AAAEc,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,MAAM,EAAE;AAAzB,GAAD,CAAlC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,EAApD;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoB,cAAD,EAAiBC,iBAAjB,IAAsCrB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACsB,eAAD,EAAkBC,YAAlB,IAAkCvB,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,cAAc;AACdC,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,cAAc,GAAG,YAAY;AACjC,QAAIE,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAU,wBAAV,CAArB;AACE,UAAM;AAAEC,MAAAA,KAAK,EAAExB,SAAT;AAAoBE,MAAAA,GAApB;AAAyBE,MAAAA;AAAzB,QAAiCkB,QAAQ,CAACG,IAAhD;AACAxB,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,IAAAA,MAAM,CAACD,GAAD,CAAN;AACAG,IAAAA,OAAO,CAACD,GAAD,CAAP;AAEAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,QAAQ,CAACG,IAAhC;AACH,GARD;;AAUA,QAAMJ,UAAU,GAAG,YAAY;AAC7B,QAAIC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAU,0EAAV,CAArB;;AACA,QAAID,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAIC,MAAM,GAAGP,QAAQ,CAACG,IAAtB;;AAEA,WAAK,IAAIK,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGD,MAAM,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAIxB,KAAK,GAAGuB,MAAM,CAACC,CAAD,CAAlB;;AACA,YAAI,CAAClB,UAAU,CAACN,KAAK,CAAC0B,EAAP,CAAf,EAA2B;AACzB,cAAIxB,OAAO,GAAGX,aAAa,CAACS,KAAK,CAACE,OAAN,CAAcyB,QAAf,CAA3B;AACA,cAAIC,WAAW,GAAG;AAAE1B,YAAAA,OAAF;AAAWC,YAAAA,MAAM,EAAEH,KAAK,CAAC6B,KAAN,CAAYF;AAA/B,WAAlB;AACA1B,UAAAA,QAAQ,CAAC2B,WAAD,CAAR;AACAtB,UAAAA,UAAU,CAACN,KAAK,CAAC0B,EAAP,CAAV,GAAuBE,WAAvB;AACAvB,UAAAA,iBAAiB,CAACL,KAAK,CAAC0B,EAAP,CAAjB;AACAnB,UAAAA,aAAa,CAACD,UAAD,CAAb;AACAG,UAAAA,iBAAiB,CAACD,cAAc,CAACsB,MAAf,CAAsB9B,KAAK,CAAC0B,EAA5B,CAAD,CAAjB;AACA;AACD;AACF;AACF;AACF,GAnBD;;AAqBA,QAAMK,SAAS,GAAG,MAAM;AACtBvC,IAAAA,OAAO,CAACQ,KAAK,CAACE,OAAP,CAAP;AACD,GAFD;;AAIA,QAAM8B,2BAA2B,GAAG,MAAM;AACxCrB,IAAAA,YAAY,CAAC,CAACD,eAAF,CAAZ;AACD,GAFD;;AAIA,QAAMuB,SAAS,GAAIC,MAAD,IAAY;AAC5BnB,IAAAA,UAAU;AACVH,IAAAA,YAAY,CAACR,cAAD,CAAZ,GAA+B8B,MAA/B;AACArB,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GAJD;;AAMA,QAAMuB,aAAa,GAAI,wBAAuBzC,SAAU,gBAAxD;AACA,QAAM0C,QAAQ,GAAI,oEAAmEtC,GAAI,IAAGF,GAAI,KAAIE,GAAI,IAAGF,GAAI,oIAA/G;AAEAwB,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,SAAS,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEyC,aAAV;AAAyB,IAAA,SAAS,EAAC,OAAnC;AAA2C,IAAA,GAAG,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOGvC,GAAG,IAAIE,GAAP,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEsC,QAAV;AAAoB,IAAA,SAAS,EAAC,OAA9B;AAAsC,IAAA,GAAG,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARJ,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG1B,eAAe,iBACd;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEqB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAOE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEC,2BAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACItB,eAAe,GAAG,kBAAH,GAAwB,mBAD3C,CAPF,CADF,EAcGA,eAAe,GACdN,cAAc,iBACZ;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,UAAU,CAACF,cAAD,CAAV,CAA2BF,OAA5C;AAAqD,IAAA,MAAM,EAAEI,UAAU,CAACF,cAAD,CAAV,CAA2BD,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAqC,IAAA,OAAO,EAAE,MAAM;AAAE8B,MAAAA,SAAS,CAAC,KAAD,CAAT;AAAkB,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAE,MAAM;AAAEA,MAAAA,SAAS,CAAC,IAAD,CAAT;AAAiB,KAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJA,eAOA;AAAQ,IAAA,SAAS,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAE,MAAM;AAAEA,MAAAA,SAAS,CAAC,MAAD,CAAT;AAAmB,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPA,CAFF,CAFY,GAkBbzB,cAAc,CAAC6B,GAAf,CAAoBX,EAAD,IAAQ;AAC1B,UAAM1B,KAAK,GAAGM,UAAU,CAACoB,EAAD,CAAxB;AACA,UAAMQ,MAAM,GAAGtB,YAAY,CAACc,EAAD,CAA3B;AACA,wBACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEA,EADP;AAEE,MAAA,KAAK,EAAE1B,KAAK,CAACE,OAFf;AAGE,MAAA,MAAM,EAAEF,KAAK,CAACG,MAHhB;AAIE,MAAA,MAAM,EAAE+B,MAJV;AAKE,MAAA,OAAO,EAAE,MAAM;AACb7B,QAAAA,iBAAiB,CAACqB,EAAD,CAAjB;AACAM,QAAAA,2BAA2B;AAC5B,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD,GAfA,CAhCL,CAdF,CADF,CAFF,CADF,CADF;AA6ED;;AAED,MAAMM,QAAQ,GAAG,CAAC;AAAEtC,EAAAA,KAAF;AAASG,EAAAA,MAAT;AAAiB+B,EAAAA;AAAjB,CAAD,kBACf;AAAK,EAAA,SAAS,EAAEA,MAAM,GAAG,eAAeA,MAAlB,GAA2B,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGlC,KADH,CADF,eAIE;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGG,MADH,CAJF,CADF;;AAWA,eAAeV,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './styles/App.scss'\n\nimport axios from 'axios'\n\nimport { parseQuoteStr, readStr } from './utilties/strUtilities'\n\nfunction App() {\n  const [ipAddress, setIPAddress] = useState()\n  const [lat, setLat] = useState()\n  const [lon, setLong] = useState()\n  const [quote, setQuote] = useState({ content: null, author: null })\n  const [currentQuoteId, setCurrentQuoteId] = useState()\n  const [pastQuotes, setPastQuotes] = useState({})\n  const [pastQuoteOrder, setPastQuoteOrder] = useState([])\n  const [singleQuoteMode, setQuoteMode] = useState(true)\n  const [quoteRatings, setQuoteRatings] = useState({})\n\n  useEffect(() => {\n    fetchIPAddress()\n    fetchQuote()\n  }, [])\n\n  const fetchIPAddress = async () => {\n    let response = await axios.get('http://ip-api.com/json')\n      const { query: ipAddress, lat, lon } = response.data\n      setIPAddress(ipAddress)\n      setLat(lat)\n      setLong(lon)\n\n      console.log(\"IP Data\", response.data)\n  }\n\n  const fetchQuote = async () => {\n    let response = await axios.get('https://quotesondesign.com/wp-json/wp/v2/posts/?orderby=rand&per_page=10')\n    if (response.status === 200) {\n      let quotes = response.data\n\n      for (let i=0; i < quotes.length; i++) {\n        let quote = quotes[i]\n        if (!pastQuotes[quote.id]) {\n          let content = parseQuoteStr(quote.content.rendered)\n          let quoteObject = { content, author: quote.title.rendered }\n          setQuote(quoteObject)\n          pastQuotes[quote.id] = quoteObject\n          setCurrentQuoteId(quote.id)\n          setPastQuotes(pastQuotes)\n          setPastQuoteOrder(pastQuoteOrder.concat(quote.id))\n          return\n        }\n      }\n    }\n  }\n\n  const readQuote = () => {\n    readStr(quote.content)\n  }\n\n  const showPastQuotesOrSingleQuote = () => {\n    setQuoteMode(!singleQuoteMode)\n  }\n\n  const rateQuote = (rating) => {\n    fetchQuote()\n    quoteRatings[currentQuoteId] = rating\n    setQuoteRatings(quoteRatings)\n  }\n\n  const robotImageURL = `https://robohash.org/${ipAddress}.png?bgset=bg2`\n  const mapImage = `https://api.mapbox.com/styles/v1/mapbox/streets-v11/static/pin-s(${lon},${lat})/${lon},${lat},9.67,0.00,0.00/500x500@2x?access_token=pk.eyJ1IjoicmVhbHNlYW4iLCJhIjoiY2s3bnB3YjhjMDE4YjNncGdhaDFraHR2ZiJ9.HbrfAF0MChL2E_T7ZROD9A`\n\n  console.log(quoteRatings)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Quote Bot</h1>\n        <div className=\"container\">\n          <div className=\"level\">\n            <div className=\"level-left user-container\">\n              {ipAddress && (\n                <picture>\n                  <img src={robotImageURL} className=\"robot\" alt=\"logo\" />\n                </picture>\n              )}\n              <br/>\n              {lat && lon && (\n                <picture>\n                  <img src={mapImage} className=\"robot\" alt=\"logo\" />\n                </picture>\n              )}\n            </div>\n            <div className=\"level-right quote-container\">\n              <div className=\"button-container\">\n                {singleQuoteMode && (\n                  <button className='button' onClick={readQuote}>\n                    Read this quote\n                  </button>\n                )}\n                \n                <button className='button' onClick={showPastQuotesOrSingleQuote}>\n                  { singleQuoteMode ? 'Show past quotes' : 'Show single quote' }\n                </button>\n              </div>\n\n              {/* Quote */}\n              {singleQuoteMode ? \n                currentQuoteId && (\n                  <div className=\"single-quote-container\">\n                    <QuoteBox quote={pastQuotes[currentQuoteId].content} author={pastQuotes[currentQuoteId].author}/>\n                    <div className=\"single-quote-container-buttons\">\n                    <button className='button is-danger' onClick={() => { rateQuote('bad') } }>\n                      Lame\n                    </button>\n                    <button className='button is-warning' onClick={() => { rateQuote('ok') }}>\n                      Meh\n                    </button>\n                    <button className='button is-success' onClick={() => { rateQuote('good') }}>\n                      Great\n                    </button>\n                    </div>\n                  </div>\n                  \n                ) :\n                (pastQuoteOrder.map((id) => {\n                  const quote = pastQuotes[id]\n                  const rating = quoteRatings[id]\n                  return (\n                    <QuoteBox\n                      key={id}\n                      quote={quote.content}\n                      author={quote.author}\n                      rating={rating}\n                      onClick={() => { \n                        setCurrentQuoteId(id)\n                        showPastQuotesOrSingleQuote()\n                      }}\n                    />\n                  )\n                })\n\n                )\n\n              }\n            </div>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nconst QuoteBox = ({ quote, author, rating}) => (\n  <div className={rating ? 'quote-box ' + rating : 'quote-box'}>\n    <div className='context'>\n      {quote}\n    </div>\n    <div className='author'>\n      {author}\n    </div>\n  </div>\n)\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}