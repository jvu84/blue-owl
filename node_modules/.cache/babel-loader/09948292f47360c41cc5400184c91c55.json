{"ast":null,"code":"import axios from 'axios';\nexport const parseQuoteStr = str => {\n  return str.replace(/(<([^>]+)>)/ig, '').replace(/&#8217;/g, \"'\");\n};\nexport const readStr = async str => {\n  const newString = str.replace(/ /g, \"+\");\n  const voiceAPI = `http://api.voicerss.org/?key=0bb282d009b0476f9790b9b76954f35e&src=${newString}.&hl=en-us`;\n  let response = await axios.get(voiceAPI, {\n    responseType: 'arraybuffer'\n  }); // Fix Prefixing\n  // An AudioContext is for managing and playing all sounds.\n\n  let AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioContext = new AudioContext();\n  const audioBuffer = await audioContext.decodeAudioData(response.data); // Convert the response array buffer to the audio data\n\n  let source = audioContext.createBufferSource(); // Create a source source\n\n  source.buffer = audioBuffer; // Tell the source which sound to play\n\n  source.connect(audioContext.destination); // Connect the source to the speakers\n\n  source.start(0); // Start\n};","map":{"version":3,"sources":["/Users/jonathanvu/github/projectBurn/coding-challenges/blue-owl/ui/src/utilties/strUtilities.js"],"names":["axios","parseQuoteStr","str","replace","readStr","newString","voiceAPI","response","get","responseType","AudioContext","window","webkitAudioContext","audioContext","audioBuffer","decodeAudioData","data","source","createBufferSource","buffer","connect","destination","start"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,GAAD,IAAS;AACpC,SAAOA,GAAG,CAACC,OAAJ,CAAa,eAAb,EAA8B,EAA9B,EAAkCA,OAAlC,CAA0C,UAA1C,EAAsD,GAAtD,CAAP;AACD,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAG,MAAOF,GAAP,IAAe;AACpC,QAAMG,SAAS,GAAGH,GAAG,CAACC,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,CAAlB;AACA,QAAMG,QAAQ,GAAI,qEAAoED,SAAU,YAAhG;AAEA,MAAIE,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUF,QAAV,EAAoB;AAAGG,IAAAA,YAAY,EAAE;AAAjB,GAApB,CAArB,CAJoC,CAMpC;AACA;;AACA,MAAIC,YAAY,GAAGC,MAAM,CAACD,YAAP,IAAuBC,MAAM,CAACC,kBAAjD;AACA,QAAMC,YAAY,GAAG,IAAIH,YAAJ,EAArB;AAEA,QAAMI,WAAW,GAAG,MAAMD,YAAY,CAACE,eAAb,CAA6BR,QAAQ,CAACS,IAAtC,CAA1B,CAXoC,CAWmC;;AACvE,MAAIC,MAAM,GAAGJ,YAAY,CAACK,kBAAb,EAAb,CAZoC,CAYY;;AAChDD,EAAAA,MAAM,CAACE,MAAP,GAAgBL,WAAhB,CAboC,CAaP;;AAC7BG,EAAAA,MAAM,CAACG,OAAP,CAAeP,YAAY,CAACQ,WAA5B,EAdoC,CAcM;;AAC1CJ,EAAAA,MAAM,CAACK,KAAP,CAAa,CAAb,EAfoC,CAelB;AACnB,CAhBM","sourcesContent":["import axios from 'axios'\n\nexport const parseQuoteStr = (str) => {\n  return str.replace( /(<([^>]+)>)/ig, '').replace(/&#8217;/g, \"'\");\n}\n\nexport const readStr = async (str) => {\n  const newString = str.replace(/ /g, \"+\");\n  const voiceAPI = `http://api.voicerss.org/?key=0bb282d009b0476f9790b9b76954f35e&src=${newString}.&hl=en-us`\n\n  let response = await axios.get(voiceAPI, {  responseType: 'arraybuffer' })\n\n  // Fix Prefixing\n  // An AudioContext is for managing and playing all sounds.\n  let AudioContext = window.AudioContext || window.webkitAudioContext;\n  const audioContext = new AudioContext();\n\n  const audioBuffer = await audioContext.decodeAudioData(response.data); // Convert the response array buffer to the audio data\n  let source = audioContext.createBufferSource(); // Create a source source\n  source.buffer = audioBuffer; // Tell the source which sound to play\n  source.connect(audioContext.destination); // Connect the source to the speakers\n  source.start(0);  // Start\n}\n"]},"metadata":{},"sourceType":"module"}